{"ast":null,"code":"/*\n * Name          : joy.js\n * @author       : Roberto D'Amico (Bobboteck)\n * Last modified : 09.06.2020\n * Revision      : 1.1.6\n *\n * Modification History:\n * Date         Version     Modified By\t\tDescription\n * 2020-06-09\t1.1.6\t\tRoberto D'Amico\tFixed Issue #10 and #11\n * 2020-04-20\t1.1.5\t\tRoberto D'Amico\tCorrect: Two sticks in a row, thanks to @liamw9534 for the suggestion\n * 2020-04-03               Roberto D'Amico Correct: InternalRadius when change the size of canvas, thanks to @vanslipon for the suggestion\n * 2020-01-07\t1.1.4\t\tRoberto D'Amico Close #6 by implementing a new parameter to set the functionality of auto-return to 0 position\n * 2019-11-18\t1.1.3\t\tRoberto D'Amico\tClose #5 correct indication of East direction\n * 2019-11-12   1.1.2       Roberto D'Amico Removed Fix #4 incorrectly introduced and restored operation with touch devices\n * 2019-11-12   1.1.1       Roberto D'Amico Fixed Issue #4 - Now JoyStick work in any position in the page, not only at 0,0\n * \n * The MIT License (MIT)\n *\n *  This file is part of the JoyStick Project (https://github.com/bobboteck/JoyStick).\n *\tCopyright (c) 2015 Roberto D'Amico (Bobboteck).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @desc Principal object that draw a joystick, you only need to initialize the object and suggest the HTML container\n * @costructor\n * @param container {String} - HTML object that contains the Joystick\n * @param parameters (optional) - object with following keys:\n *\ttitle {String} (optional) - The ID of canvas (Default value is 'joystick')\n * \twidth {Int} (optional) - The width of canvas, if not specified is setted at width of container object (Default value is the width of container object)\n * \theight {Int} (optional) - The height of canvas, if not specified is setted at height of container object (Default value is the height of container object)\n * \tinternalFillColor {String} (optional) - Internal color of Stick (Default value is '#00AA00')\n * \tinternalLineWidth {Int} (optional) - Border width of Stick (Default value is 2)\n * \tinternalStrokeColor {String}(optional) - Border color of Stick (Default value is '#003300')\n * \texternalLineWidth {Int} (optional) - External reference circonference width (Default value is 2)\n * \texternalStrokeColor {String} (optional) - External reference circonference color (Default value is '#008000')\n * \tautoReturnToCenter {Bool} (optional) - Sets the behavior of the stick, whether or not, it should return to zero position when released (Default value is True and return to zero)\n */\nvar JoyStick = function JoyStick(container, parameters) {\n  parameters = parameters || {};\n  var title = typeof parameters.title === \"undefined\" ? \"joystick\" : parameters.title,\n      width = typeof parameters.width === \"undefined\" ? 0 : parameters.width,\n      height = typeof parameters.height === \"undefined\" ? 0 : parameters.height,\n      internalFillColor = typeof parameters.internalFillColor === \"undefined\" ? \"#00AA00\" : parameters.internalFillColor,\n      internalLineWidth = typeof parameters.internalLineWidth === \"undefined\" ? 2 : parameters.internalLineWidth,\n      internalStrokeColor = typeof parameters.internalStrokeColor === \"undefined\" ? \"#003300\" : parameters.internalStrokeColor,\n      externalLineWidth = typeof parameters.externalLineWidth === \"undefined\" ? 2 : parameters.externalLineWidth,\n      externalStrokeColor = typeof parameters.externalStrokeColor === \"undefined\" ? \"#008000\" : parameters.externalStrokeColor,\n      autoReturnToCenter = typeof parameters.autoReturnToCenter === \"undefined\" ? true : parameters.autoReturnToCenter; // Create Canvas element and add it in the Container object\n\n  var objContainer = document.getElementById(container);\n  var canvas = document.createElement(\"canvas\");\n  canvas.id = title;\n\n  if (width === 0) {\n    width = objContainer.clientWidth;\n  }\n\n  if (height === 0) {\n    height = objContainer.clientHeight;\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n  objContainer.appendChild(canvas);\n  var context = canvas.getContext(\"2d\");\n  var pressed = 0; // Bool - 1=Yes - 0=No\n\n  var circumference = 2 * Math.PI;\n  var internalRadius = (canvas.width - (canvas.width / 2 + 10)) / 2;\n  var maxMoveStick = internalRadius + 5;\n  var externalRadius = internalRadius + 30;\n  var centerX = canvas.width / 2;\n  var centerY = canvas.height / 2;\n  var directionHorizontalLimitPos = canvas.width / 10;\n  var directionHorizontalLimitNeg = directionHorizontalLimitPos * -1;\n  var directionVerticalLimitPos = canvas.height / 10;\n  var directionVerticalLimitNeg = directionVerticalLimitPos * -1; // Used to save current position of stick\n\n  var movedX = centerX;\n  var movedY = centerY; // Check if the device support the touch or not\n\n  if (\"ontouchstart\" in document.documentElement) {\n    canvas.addEventListener(\"touchstart\", onTouchStart, false);\n    canvas.addEventListener(\"touchmove\", onTouchMove, false);\n    canvas.addEventListener(\"touchend\", onTouchEnd, false);\n  } else {\n    canvas.addEventListener(\"mousedown\", onMouseDown, false);\n    canvas.addEventListener(\"mousemove\", onMouseMove, false);\n    canvas.addEventListener(\"mouseup\", onMouseUp, false);\n  } // Draw the object\n\n\n  drawExternal();\n  drawInternal();\n  /******************************************************\n   * Private methods\n   *****************************************************/\n\n  /**\n   * @desc Draw the external circle used as reference position\n   */\n\n  function drawExternal() {\n    context.beginPath();\n    context.arc(centerX, centerY, externalRadius, 0, circumference, false);\n    context.lineWidth = externalLineWidth;\n    context.strokeStyle = externalStrokeColor;\n    context.stroke();\n  }\n  /**\n   * @desc Draw the internal stick in the current position the user have moved it\n   */\n\n\n  function drawInternal() {\n    context.beginPath();\n\n    if (movedX < internalRadius) {\n      movedX = maxMoveStick;\n    }\n\n    if (movedX + internalRadius > canvas.width) {\n      movedX = canvas.width - maxMoveStick;\n    }\n\n    if (movedY < internalRadius) {\n      movedY = maxMoveStick;\n    }\n\n    if (movedY + internalRadius > canvas.height) {\n      movedY = canvas.height - maxMoveStick;\n    }\n\n    context.arc(movedX, movedY, internalRadius, 0, circumference, false); // create radial gradient\n\n    var grd = context.createRadialGradient(centerX, centerY, 5, centerX, centerY, 200); // Light color\n\n    grd.addColorStop(0, internalFillColor); // Dark color\n\n    grd.addColorStop(1, internalStrokeColor);\n    context.fillStyle = grd;\n    context.fill();\n    context.lineWidth = internalLineWidth;\n    context.strokeStyle = internalStrokeColor;\n    context.stroke();\n  }\n  /**\n   * @desc Events for manage touch\n   */\n\n\n  function onTouchStart(event) {\n    pressed = 1;\n  }\n\n  function onTouchMove(event) {\n    // Prevent the browser from doing its default thing (scroll, zoom)\n    event.preventDefault();\n\n    if (pressed === 1 && event.targetTouches[0].target === canvas) {\n      movedX = event.targetTouches[0].pageX;\n      movedY = event.targetTouches[0].pageY; // Manage offset\n\n      if (canvas.offsetParent.tagName.toUpperCase() === \"BODY\") {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      } // Delete canvas\n\n\n      context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onTouchEnd(event) {\n    pressed = 0; // If required reset position store variable\n\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    } // Delete canvas\n\n\n    context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n    drawExternal();\n    drawInternal(); //canvas.unbind('touchmove');\n  }\n  /**\n   * @desc Events for manage mouse\n   */\n\n\n  function onMouseDown(event) {\n    pressed = 1;\n  }\n\n  function onMouseMove(event) {\n    if (pressed === 1) {\n      movedX = event.pageX;\n      movedY = event.pageY; // Manage offset\n\n      if (canvas.offsetParent.tagName.toUpperCase() === \"BODY\") {\n        movedX -= canvas.offsetLeft;\n        movedY -= canvas.offsetTop;\n      } else {\n        movedX -= canvas.offsetParent.offsetLeft;\n        movedY -= canvas.offsetParent.offsetTop;\n      } // Delete canvas\n\n\n      context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n      drawExternal();\n      drawInternal();\n    }\n  }\n\n  function onMouseUp(event) {\n    pressed = 0; // If required reset position store variable\n\n    if (autoReturnToCenter) {\n      movedX = centerX;\n      movedY = centerY;\n    } // Delete canvas\n\n\n    context.clearRect(0, 0, canvas.width, canvas.height); // Redraw object\n\n    drawExternal();\n    drawInternal(); //canvas.unbind('mousemove');\n  }\n  /******************************************************\n   * Public methods\n   *****************************************************/\n\n  /**\n   * @desc The width of canvas\n   * @return Number of pixel width \n   */\n\n\n  this.GetWidth = function () {\n    return canvas.width;\n  };\n  /**\n   * @desc The height of canvas\n   * @return Number of pixel height\n   */\n\n\n  this.GetHeight = function () {\n    return canvas.height;\n  };\n  /**\n   * @desc The X position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n\n\n  this.GetPosX = function () {\n    return movedX;\n  };\n  /**\n   * @desc The Y position of the cursor relative to the canvas that contains it and to its dimensions\n   * @return Number that indicate relative position\n   */\n\n\n  this.GetPosY = function () {\n    return movedY;\n  };\n  /**\n   * @desc Normalizzed value of X move of stick\n   * @return Integer from -100 to +100\n   */\n\n\n  this.GetX = function () {\n    return (100 * ((movedX - centerX) / maxMoveStick)).toFixed();\n  };\n  /**\n   * @desc Normalizzed value of Y move of stick\n   * @return Integer from -100 to +100\n   */\n\n\n  this.GetY = function () {\n    return (100 * ((movedY - centerY) / maxMoveStick) * -1).toFixed();\n  };\n  /**\n   * @desc Get the direction of the cursor as a string that indicates the cardinal points where this is oriented\n   * @return String of cardinal point N, NE, E, SE, S, SW, W, NW and C when it is placed in the center\n   */\n\n\n  this.GetDir = function () {\n    var result = \"\";\n    var orizontal = movedX - centerX;\n    var vertical = movedY - centerY;\n\n    if (vertical >= directionVerticalLimitNeg && vertical <= directionVerticalLimitPos) {\n      result = \"C\";\n    }\n\n    if (vertical < directionVerticalLimitNeg) {\n      result = \"N\";\n    }\n\n    if (vertical > directionVerticalLimitPos) {\n      result = \"S\";\n    }\n\n    if (orizontal < directionHorizontalLimitNeg) {\n      if (result === \"C\") {\n        result = \"W\";\n      } else {\n        result += \"W\";\n      }\n    }\n\n    if (orizontal > directionHorizontalLimitPos) {\n      if (result === \"C\") {\n        result = \"E\";\n      } else {\n        result += \"E\";\n      }\n    }\n\n    return result;\n  };\n};\n\nalert(\"haha\");","map":{"version":3,"sources":["/home/sagnikg/react/JazzApp/src/joy.js"],"names":["JoyStick","container","parameters","title","width","height","internalFillColor","internalLineWidth","internalStrokeColor","externalLineWidth","externalStrokeColor","autoReturnToCenter","objContainer","document","getElementById","canvas","createElement","id","clientWidth","clientHeight","appendChild","context","getContext","pressed","circumference","Math","PI","internalRadius","maxMoveStick","externalRadius","centerX","centerY","directionHorizontalLimitPos","directionHorizontalLimitNeg","directionVerticalLimitPos","directionVerticalLimitNeg","movedX","movedY","documentElement","addEventListener","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","drawExternal","drawInternal","beginPath","arc","lineWidth","strokeStyle","stroke","grd","createRadialGradient","addColorStop","fillStyle","fill","event","preventDefault","targetTouches","target","pageX","pageY","offsetParent","tagName","toUpperCase","offsetLeft","offsetTop","clearRect","GetWidth","GetHeight","GetPosX","GetPosY","GetX","toFixed","GetY","GetDir","result","orizontal","vertical","alert"],"mappings":"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","sourcesContent":["/*\n * Name          : joy.js\n * @author       : Roberto D'Amico (Bobboteck)\n * Last modified : 09.06.2020\n * Revision      : 1.1.6\n *\n * Modification History:\n * Date         Version     Modified By\t\tDescription\n * 2020-06-09\t1.1.6\t\tRoberto D'Amico\tFixed Issue #10 and #11\n * 2020-04-20\t1.1.5\t\tRoberto D'Amico\tCorrect: Two sticks in a row, thanks to @liamw9534 for the suggestion\n * 2020-04-03               Roberto D'Amico Correct: InternalRadius when change the size of canvas, thanks to @vanslipon for the suggestion\n * 2020-01-07\t1.1.4\t\tRoberto D'Amico Close #6 by implementing a new parameter to set the functionality of auto-return to 0 position\n * 2019-11-18\t1.1.3\t\tRoberto D'Amico\tClose #5 correct indication of East direction\n * 2019-11-12   1.1.2       Roberto D'Amico Removed Fix #4 incorrectly introduced and restored operation with touch devices\n * 2019-11-12   1.1.1       Roberto D'Amico Fixed Issue #4 - Now JoyStick work in any position in the page, not only at 0,0\n * \n * The MIT License (MIT)\n *\n *  This file is part of the JoyStick Project (https://github.com/bobboteck/JoyStick).\n *\tCopyright (c) 2015 Roberto D'Amico (Bobboteck).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n \n/**\n * @desc Principal object that draw a joystick, you only need to initialize the object and suggest the HTML container\n * @costructor\n * @param container {String} - HTML object that contains the Joystick\n * @param parameters (optional) - object with following keys:\n *\ttitle {String} (optional) - The ID of canvas (Default value is 'joystick')\n * \twidth {Int} (optional) - The width of canvas, if not specified is setted at width of container object (Default value is the width of container object)\n * \theight {Int} (optional) - The height of canvas, if not specified is setted at height of container object (Default value is the height of container object)\n * \tinternalFillColor {String} (optional) - Internal color of Stick (Default value is '#00AA00')\n * \tinternalLineWidth {Int} (optional) - Border width of Stick (Default value is 2)\n * \tinternalStrokeColor {String}(optional) - Border color of Stick (Default value is '#003300')\n * \texternalLineWidth {Int} (optional) - External reference circonference width (Default value is 2)\n * \texternalStrokeColor {String} (optional) - External reference circonference color (Default value is '#008000')\n * \tautoReturnToCenter {Bool} (optional) - Sets the behavior of the stick, whether or not, it should return to zero position when released (Default value is True and return to zero)\n */\nvar JoyStick = (function(container, parameters)\n{\n\tparameters = parameters || {};\n\tvar title = (typeof parameters.title === \"undefined\" ? \"joystick\" : parameters.title),\n\t\twidth = (typeof parameters.width === \"undefined\" ? 0 : parameters.width),\n\t\theight = (typeof parameters.height === \"undefined\" ? 0 : parameters.height),\n\t\tinternalFillColor = (typeof parameters.internalFillColor === \"undefined\" ? \"#00AA00\" : parameters.internalFillColor),\n\t\tinternalLineWidth = (typeof parameters.internalLineWidth === \"undefined\" ? 2 : parameters.internalLineWidth),\n\t\tinternalStrokeColor = (typeof parameters.internalStrokeColor === \"undefined\" ? \"#003300\" : parameters.internalStrokeColor),\n\t\texternalLineWidth = (typeof parameters.externalLineWidth === \"undefined\" ? 2 : parameters.externalLineWidth),\n\t\texternalStrokeColor = (typeof parameters.externalStrokeColor ===  \"undefined\" ? \"#008000\" : parameters.externalStrokeColor),\n\t\tautoReturnToCenter = (typeof parameters.autoReturnToCenter === \"undefined\" ? true : parameters.autoReturnToCenter);\n\t\n\t// Create Canvas element and add it in the Container object\n\tvar objContainer = document.getElementById(container);\n\tvar canvas = document.createElement(\"canvas\");\n\tcanvas.id = title;\n\tif(width === 0) { width = objContainer.clientWidth; }\n\tif(height === 0) { height = objContainer.clientHeight; }\n\tcanvas.width = width;\n\tcanvas.height = height;\n\tobjContainer.appendChild(canvas);\n\tvar context=canvas.getContext(\"2d\");\n\t\n\tvar pressed = 0; // Bool - 1=Yes - 0=No\n    var circumference = 2 * Math.PI;\n    var internalRadius = (canvas.width-((canvas.width/2)+10))/2;\n\tvar maxMoveStick = internalRadius + 5;\n\tvar externalRadius = internalRadius + 30;\n\tvar centerX = canvas.width / 2;\n\tvar centerY = canvas.height / 2;\n\tvar directionHorizontalLimitPos = canvas.width / 10;\n\tvar directionHorizontalLimitNeg = directionHorizontalLimitPos * -1;\n\tvar directionVerticalLimitPos = canvas.height / 10;\n\tvar directionVerticalLimitNeg = directionVerticalLimitPos * -1;\n\t// Used to save current position of stick\n\tvar movedX=centerX;\n\tvar movedY=centerY;\n\t\t\n\t// Check if the device support the touch or not\n\tif(\"ontouchstart\" in document.documentElement)\n\t{\n\t\tcanvas.addEventListener(\"touchstart\", onTouchStart, false);\n\t\tcanvas.addEventListener(\"touchmove\", onTouchMove, false);\n\t\tcanvas.addEventListener(\"touchend\", onTouchEnd, false);\n\t}\n\telse\n\t{\n\t\tcanvas.addEventListener(\"mousedown\", onMouseDown, false);\n\t\tcanvas.addEventListener(\"mousemove\", onMouseMove, false);\n\t\tcanvas.addEventListener(\"mouseup\", onMouseUp, false);\n\t}\n\t// Draw the object\n\tdrawExternal();\n\tdrawInternal();\n\n\t/******************************************************\n\t * Private methods\n\t *****************************************************/\n\n\t/**\n\t * @desc Draw the external circle used as reference position\n\t */\n\tfunction drawExternal()\n\t{\n\t\tcontext.beginPath();\n\t\tcontext.arc(centerX, centerY, externalRadius, 0, circumference, false);\n\t\tcontext.lineWidth = externalLineWidth;\n\t\tcontext.strokeStyle = externalStrokeColor;\n\t\tcontext.stroke();\n\t}\n\n\t/**\n\t * @desc Draw the internal stick in the current position the user have moved it\n\t */\n\tfunction drawInternal()\n\t{\n\t\tcontext.beginPath();\n\t\tif(movedX<internalRadius) { movedX=maxMoveStick; }\n\t\tif((movedX+internalRadius) > canvas.width) { movedX = canvas.width-(maxMoveStick); }\n\t\tif(movedY<internalRadius) { movedY=maxMoveStick; }\n\t\tif((movedY+internalRadius) > canvas.height) { movedY = canvas.height-(maxMoveStick); }\n\t\tcontext.arc(movedX, movedY, internalRadius, 0, circumference, false);\n\t\t// create radial gradient\n\t\tvar grd = context.createRadialGradient(centerX, centerY, 5, centerX, centerY, 200);\n\t\t// Light color\n\t\tgrd.addColorStop(0, internalFillColor);\n\t\t// Dark color\n\t\tgrd.addColorStop(1, internalStrokeColor);\n\t\tcontext.fillStyle = grd;\n\t\tcontext.fill();\n\t\tcontext.lineWidth = internalLineWidth;\n\t\tcontext.strokeStyle = internalStrokeColor;\n\t\tcontext.stroke();\n\t}\n\t\n\t/**\n\t * @desc Events for manage touch\n\t */\n\tfunction onTouchStart(event) \n\t{\n\t\tpressed = 1;\n\t}\n\n\tfunction onTouchMove(event)\n\t{\n\t\t// Prevent the browser from doing its default thing (scroll, zoom)\n\t\tevent.preventDefault();\n\t\tif(pressed === 1 && event.targetTouches[0].target === canvas)\n\t\t{\n\t\t\tmovedX = event.targetTouches[0].pageX;\n\t\t\tmovedY = event.targetTouches[0].pageY;\n\t\t\t// Manage offset\n\t\t\tif(canvas.offsetParent.tagName.toUpperCase() === \"BODY\")\n\t\t\t{\n\t\t\t\tmovedX -= canvas.offsetLeft;\n\t\t\t\tmovedY -= canvas.offsetTop;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmovedX -= canvas.offsetParent.offsetLeft;\n\t\t\t\tmovedY -= canvas.offsetParent.offsetTop;\n\t\t\t}\n\t\t\t// Delete canvas\n\t\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t// Redraw object\n\t\t\tdrawExternal();\n\t\t\tdrawInternal();\n\t\t}\n\t} \n\n\tfunction onTouchEnd(event) \n\t{\n\t\tpressed = 0;\n\t\t// If required reset position store variable\n\t\tif(autoReturnToCenter)\n\t\t{\n\t\t\tmovedX = centerX;\n\t\t\tmovedY = centerY;\n\t\t}\n\t\t// Delete canvas\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t// Redraw object\n\t\tdrawExternal();\n\t\tdrawInternal();\n\t\t//canvas.unbind('touchmove');\n\t}\n\n\t/**\n\t * @desc Events for manage mouse\n\t */\n\tfunction onMouseDown(event) \n\t{\n\t\tpressed = 1;\n\t}\n\n\tfunction onMouseMove(event) \n\t{\n\t\tif(pressed === 1)\n\t\t{\n\t\t\tmovedX = event.pageX;\n\t\t\tmovedY = event.pageY;\n\t\t\t// Manage offset\n\t\t\tif(canvas.offsetParent.tagName.toUpperCase() === \"BODY\")\n\t\t\t{\n\t\t\t\tmovedX -= canvas.offsetLeft;\n\t\t\t\tmovedY -= canvas.offsetTop;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmovedX -= canvas.offsetParent.offsetLeft;\n\t\t\t\tmovedY -= canvas.offsetParent.offsetTop;\n\t\t\t}\n\t\t\t// Delete canvas\n\t\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t// Redraw object\n\t\t\tdrawExternal();\n\t\t\tdrawInternal();\n\t\t}\n\t}\n\n\tfunction onMouseUp(event) \n\t{\n\t\tpressed = 0;\n\t\t// If required reset position store variable\n\t\tif(autoReturnToCenter)\n\t\t{\n\t\t\tmovedX = centerX;\n\t\t\tmovedY = centerY;\n\t\t}\n\t\t// Delete canvas\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t// Redraw object\n\t\tdrawExternal();\n\t\tdrawInternal();\n\t\t//canvas.unbind('mousemove');\n\t}\n\n\t/******************************************************\n\t * Public methods\n\t *****************************************************/\n\t\n\t/**\n\t * @desc The width of canvas\n\t * @return Number of pixel width \n\t */\n\tthis.GetWidth = function () \n\t{\n\t\treturn canvas.width;\n\t};\n\t\n\t/**\n\t * @desc The height of canvas\n\t * @return Number of pixel height\n\t */\n\tthis.GetHeight = function () \n\t{\n\t\treturn canvas.height;\n\t};\n\t\n\t/**\n\t * @desc The X position of the cursor relative to the canvas that contains it and to its dimensions\n\t * @return Number that indicate relative position\n\t */\n\tthis.GetPosX = function ()\n\t{\n\t\treturn movedX;\n\t};\n\t\n\t/**\n\t * @desc The Y position of the cursor relative to the canvas that contains it and to its dimensions\n\t * @return Number that indicate relative position\n\t */\n\tthis.GetPosY = function ()\n\t{\n\t\treturn movedY;\n\t};\n\t\n\t/**\n\t * @desc Normalizzed value of X move of stick\n\t * @return Integer from -100 to +100\n\t */\n\tthis.GetX = function ()\n\t{\n\t\treturn (100*((movedX - centerX)/maxMoveStick)).toFixed();\n\t};\n\n\t/**\n\t * @desc Normalizzed value of Y move of stick\n\t * @return Integer from -100 to +100\n\t */\n\tthis.GetY = function ()\n\t{\n\t\treturn ((100*((movedY - centerY)/maxMoveStick))*-1).toFixed();\n\t};\n\t\n\t/**\n\t * @desc Get the direction of the cursor as a string that indicates the cardinal points where this is oriented\n\t * @return String of cardinal point N, NE, E, SE, S, SW, W, NW and C when it is placed in the center\n\t */\n\tthis.GetDir = function()\n\t{\n\t\tvar result = \"\";\n\t\tvar orizontal = movedX - centerX;\n\t\tvar vertical = movedY - centerY;\n\t\t\n\t\tif(vertical >= directionVerticalLimitNeg && vertical <= directionVerticalLimitPos)\n\t\t{\n\t\t\tresult = \"C\";\n\t\t}\n\t\tif(vertical < directionVerticalLimitNeg)\n\t\t{\n\t\t\tresult = \"N\";\n\t\t}\n\t\tif(vertical > directionVerticalLimitPos)\n\t\t{\n\t\t\tresult = \"S\";\n\t\t}\n\t\t\n\t\tif(orizontal < directionHorizontalLimitNeg)\n\t\t{\n\t\t\tif(result === \"C\")\n\t\t\t{ \n\t\t\t\tresult = \"W\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult += \"W\";\n\t\t\t}\n\t\t}\n\t\tif(orizontal > directionHorizontalLimitPos)\n\t\t{\n\t\t\tif(result === \"C\")\n\t\t\t{ \n\t\t\t\tresult = \"E\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult += \"E\";\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n});\nalert(\"haha\");"]},"metadata":{},"sourceType":"module"}